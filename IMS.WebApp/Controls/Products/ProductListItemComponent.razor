@inject NavigationManager NavigationManager

@foreach(var prod in Products)
{
    <tr>
        <td>@prod.ProductId</td>
        <td>@prod.ProductName</td>
        <td>@prod.Quantity</td>
        <td>@prod.Price.ToString("c")</td>
        <td>@prod.Description
            <tr>
                <td>
                <ul>
                    <li>Case</li>
                    <li>CPU</li>
                    <li>Motherboard</li>
                    <li>Graphic card</li>
                    <li>Memmory</li>
                    <li>Hdd</li>
                    <li>Power Supply</li>
                </ul>
                </td>
        <td>
            <ul>
                <li>:@prod.Case</li>
                <li>:@prod.Cpu</li>
                <li>:@prod.Motherboard</li>
                <li>:@prod.GraphicCard</li>
                <li>:@prod.Memmory</li>
                <li>:@prod.Hdd</li>
                <li>:@prod.PowerSupply</li>
            </ul>
        </td>
            </tr>
       
        
        </td>
        <td>
            <div class="btn-group btn-group-sm" role="group" aria-label="Small button group">
                <button type="button" class="btn btn-sm btn-outline-primary" ><i class="bi bi-pencil-square" style="padding:0 0.5rem 0 0;"></i>Edit</button>
            <button type="button" class="btn btn-sm btn-danger" style="padding:0 0.5rem 0 0;"><i class="bi bi-trash" style="padding:0 0.5rem 0 0.5rem;"></i>Delete</button>
            </div>
        </td>
    </tr>
}

@code {
    [Parameter]
    public List<Product> Products { get; set; } = new List<Product>();

    private void EditInventory(int inventoryId)
    {
        NavigationManager.NavigateTo($"/editInventory/{inventoryId}");
    }
    
}